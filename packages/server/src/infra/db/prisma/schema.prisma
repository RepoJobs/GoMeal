// ===== Config =====
datasource db {
  provider = "postgresql"
  url      = env("POSTGRES_DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

// ===== Location =====
model Country {
  id    Int     @id @default(autoincrement())
  name  String  @db.VarChar(255)

  // Relations
  states State[]

  userAddresses  UserAddress[]
}

model State {
  id    Int     @id @default(autoincrement())
  name  String  @db.VarChar(255)

  // Relations
  cities      City[]

  country     Country     @relation(fields: [countryId], references: [id])
  countryId   Int

  userAddresses  UserAddress[]
}

model City {
  id       Int     @id @default(autoincrement())
  name     String  @db.VarChar(255)

  // Relations
  state    State   @relation(fields: [stateId], references: [id])
  stateId  Int

  userAddresses  UserAddress[]
}

// ====== USER ======
model UserAddress {
    id          Int        @id @default(autoincrement())
    street      String     @db.VarChar(255)
    number      String     @db.VarChar(10)
    zip_code    String     @db.VarChar(10)

    // Relations
    city        City       @relation(fields: [cityId], references: [id])
    cityId      Int
    state       State      @relation(fields: [stateId], references: [id])
    stateId     Int
    country     Country    @relation(fields: [countryId], references: [id])
    countryId   Int
    user        User       @relation(fields: [userId], references: [id])
    userId      Int
}

model User {
    id         Int       @id @default(autoincrement())
    email      String    @unique
    first_name String    @db.VarChar(255)
    last_name  String?   @db.VarChar(255)
    password   String    @db.VarChar(255)

    // Relations
    profile Profile?
    customer Customer?
    address UserAddress[]
}

model Profile {
  id  Int     @id @default(autoincrement())

  // relations
  user    User    @relation(fields: [userId], references: [id])
  userId  Int     @unique
}



// ===== CUSTOMER =====
model Customer {
    id      Int     @id @default(autoincrement())

    // Relations
    user    User    @relation(fields: [userId], references: [id])
    userId  Int     @unique
}